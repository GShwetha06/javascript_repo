1. Are Higher Order functions and Call back functions the same ? If not,
briefly explain about both functions.

            Higher Order Function and Call back functions are not same.
            Higher Order function are the functions which accepts callback functions as arguments and they call them after they are excuted.
            Callback functions are functions which are passed as an argument to the higher order functions.


2. Is filter a Higher Order function in Javascript ? If yes, why ?

            In functional programming, filter is a higher-order function that processes a data structure (usually a list) in some order 
            to produce a new data structure containing exactly those elements of the original data structure for which a given predicate returns the boolean value true .

3. Give an example of a Higher Order function and a call back function
used in the same program.

            function add(a,b, handle){  //higher order function
                let res = a+b;
                handle(res);
            }

            function print(res){   //callback function
                console.log(res);
            }

            add(10,20,print) ;   


4. Carefully check the example below:
a) What will be the output of this program ?
b) Which function is a Higher Order function here ?
const names= ['John', 'Tina','Kale','Max']
function useFunction(arr,fn){
for(let i=0; i<arr.length; i++){
fn(arr[I]);
}
}
function argFn (name){
console.log("Hello " + name );
}
useFunction(names,argFn);

        a)  ReferenceError: I is not defined 

            if i is small letter:

            Hello John
            Hello Tina
            Hello Kale
            Hello Max


        b)  useFunction is the higher ordre function.